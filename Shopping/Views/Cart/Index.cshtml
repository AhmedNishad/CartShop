@model Shopping.Models.IndexViewModel
@{
    ViewData["Title"] = "Index";
}

<h1>Add Order</h1>

<form action="" method="post">
    <label asp-for="@Model.AssociatedCustomer">Customer</label>
    <select name="customerId">
        @foreach(var customer in Model.Customers)
        {
            <option value="@customer.Id">@customer.Name</option>
        }
    </select>
    <label for="data">Date</label>
    <input name="date" type="date" value="@DateTime.Now"/>

    <table class="table">
        <tr>
            <th>Product</th>
            <th>Quantity</th>
            <th>Total</th>
            <th>Actions</th>
        </tr>
        <tbody id="line-item-container">
            <tr>
                <td><input type="hidden" value="2" name="[0].product.id" /> Carrots</td>
                <td><input type="hidden" value="12" name="[0].quantity" />12</td>
                <td><input type="hidden" value="120" name="[0].total" />120</td>
                <td><button>Remove</button></td>
            </tr>
            <tr>
                <td><input type="hidden" value="1" name="[1].product.id" /> Maggots</td>
                <td><input type="hidden" value="12" name="[1].quantity" />2</td>
                <td><input type="hidden" value="120" name="[1].total" />240</td>
                <td><button>Remove</button></td>
            </tr>
        </tbody>
        <tr>
            <td>
                <select id="product-picker" name="productId">
                    @foreach (var product in Model.Products)
                    {
                        <option data-product-name="@product.ProductName" data-unit-price="@product.UnitPrice" data-unit-quantity="@product.QuantityAtHand"
                                value="@product.Id">
                            @product.ProductName
                        </option>
                    }
                </select>
            </td>
            <td><input id="quantity-input" type="number" name="quantity" /></td>
            <td><h4 id="quantity-output"></h4></td>
            <td><button id="add-line-item">Add</button></td>
        </tr>
    </table>

    <h2>Total : </h2>

    <input type="submit"/>
</form>

<script>
    var productPicker = document.getElementById("product-picker");
    var quantityInput = document.getElementById("quantity-input");
    var quantityOutput = document.getElementById("quantity-output");
    var addLineItem = document.getElementById("add-line-item");
    var lineItemContainer = document.getElementById("line-item-container");
    var idCounter = 2
    addLineItem.addEventListener('click', e => {
        e.preventDefault();
        var lineItemElement = document.createElement("tr");
        var productIdElement = document.createElement("td");
        productIdElement.innerHTML = `<input type='hidden' value='${productPicker.value}' name='[${idCounter}].product.id' />` 
        var quantityElement = document.createElement("td");
        quantityElement.innerHTML =`<input type="hidden" value="12" name="[${idCounter}].quantity" />`
        var totalElement = document.createElement("td");
        totalElement.innerHTML = `<h4>${parseInt(productPicker.firstElementChild.getAttribute('data-unit-price')) * parseInt(quantityInput.value)}</h4>`
        var removeElement = document.createElement("td");
        removeElement.innerHTML = `<button>Remove</button>`
        lineItemElement.appendChild(productIdElement);
        lineItemElement.appendChild(quantityElement);
        lineItemElement.appendChild(totalElement);
        lineItemElement.appendChild(removeElement);
        lineItemContainer.appendChild(lineItemElement);
        idCounter++
    })
</script>

